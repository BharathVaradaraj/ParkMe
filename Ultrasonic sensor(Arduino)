int trigPin = 2;
int echoPin1 = 4;
int echoPin2 = 5;
int echoPin3 = 6;

void setup() {
    Serial.begin(9600);
    pinMode(trigPin, OUTPUT);
    pinMode(echoPin1, INPUT);
    pinMode(echoPin2, INPUT);
    pinMode(echoPin3, INPUT);
}

void loop()
{
  long duration1,duration2,duration3,dist[4];

  // The sensor is triggered by a HIGH pulse of 10 or more microseconds.
  // Give a short LOW pulse beforehand to ensure a clean HIGH pulse:
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  
  // Read the signal from the sensor: a HIGH pulse whose
  // duration is the time (in microseconds) from the sending
  // of the ping to the reception of its echo off of an object.
  
  duration1 = pulseIn(echoPin1, HIGH);
  duration2 = pulseIn(echoPin2, HIGH);
  duration3 = pulseIn(echoPin3, HIGH);
  
  // convert the time into a distance
  dist[1] = microsecondsToCentimeters(duration1);
  dist[2] = microsecondsToCentimeters(duration2);
  dist[3] = microsecondsToCentimeters(duration3);
  
  //update status
  update_status(dist);
  delay(5000);
}

long microsecondsToCentimeters(long microseconds){
  // The speed of sound is 340 m/s or 29 microseconds per centimeter.
  // The ping travels out and back, so to find the distance of the
  // object we take half of the distance travelled.
  return microseconds / 29 / 2;
}

void update_status(long dist[4]){
  int status_flag = 0;
  for(int i=1;i<=3;i++){
    if(dist[i] > 10 && dist[i] < 35){
      status_flag = 1;
      Serial.print("sensor_id=00");
      Serial.print(i);
      Serial.print(" ");
      Serial.print(status_flag);
      Serial.println();    
    }
    else{
      status_flag = 0;
      Serial.print("sensor_id=00");
      Serial.print(i);
      Serial.print(" ");
      Serial.print(status_flag);
      Serial.println();    
    }
  }
}

